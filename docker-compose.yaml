services:
  api:
    build:
      context: api
      target: final
    env_file:
      - .env
      - api/.env
    environment:
      DEFAULT_MODEL: "gpt-4o"
    ports:
      - 3000:3000
    networks:
      - db_network
      - api_network
      - minio_network

  tg-bot:
    build:
      context: tg-bot
      target: final
    env_file:
      - .env
      - tg-bot/.env
    networks:
      - db_network
      - api_network

  postgres:
    image: postgres
    restart: always
    command: postgres -c 'max_connections=2000'
    volumes:
      - ./data/pg_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=example
      - POSTGRES_USER=portfolio
      - POSTGRES_DB=portfolio
    ports:
      - "5436:5432"
    networks:
      - db_network

  minio:
    image: quay.io/minio/minio:RELEASE.2024-05-28T17-19-04Z-cpuv1
    ports:
      - '9000:9000'
      - '9001:9001'
    restart: always
    networks:
      - minio_network
    volumes:
      - ./data/minio_data:/data
    environment:
      - MINIO_ROOT_USER=your_username
      - MINIO_ROOT_PASSWORD=your_pasword
      - MINIO_DEFAULT_BUCKETS=your_bucket_name
    command: server /data --console-address ":9001"

networks:
  db_network:
    driver: bridge
  api_network:
    driver: bridge
  minio_network:
    driver: bridge
